  
MpStatus:
  actAs:          { }
  columns:
    name:         { type: string(50), notnull: true }
    description:  { type: string(500) }
    status_id:    { type: integer }
  relations:
    MpStatus:   { onDelete: CASCADE, local: status_id, foreign: id }
    
MpDepartment:
  actAs:                  { }
  columns:
    name:                 { type: string(225), notnull: true }
    description:          { type: string(500), notnull: true }
    parent_organization:  { type: string(255) }
    location:             { type: string(255) }
    status_id:            { type: integer }
  relations:
    MpStatus:           { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: Departments }
    
MpAccessLevel:
  actAs:                {  }
  columns:
    name:               { type: string(225), notnull: true }
    description:        { type: string(500), notnull: true }
    status_id:          { type: integer }
  relations:
    MpStatus:         { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: AccessLevels }
    
MpUser:
  actAs:                {  }
  columns:
    first_name:         { type: string(225), notnull: true }
    last_name:          { type: string(225), notnull: true }
    designation:        { type: string(100) }
    gender:             { type: string(5) }
    username:           { type: string(20), notnull: true, unique: true }
    password:           { type: string(50), notnull: true }
    phone:              { type: string(30) }
    email:              { type: string(20) }
    address:            { type: string(500) }
    department_id:      { type: integer }
    access_level_id:    { type: integer }
    creation_date:      { type: timestamp }
    modification_date:  {type: timestamp }
    status_id:          { type: integer }
  relations:
    MpStatus:       { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: Users }
    MpDepartment:   { onDelete: CASCADE, local: department_id, foreign: id, foreignAlias: Users }
    MpAccessLevel:  { onDelete: CASCADE, local: access_level_id, foreign: id, foreignAlias: Users }
    


MpType:
  actAs:                { Timestampable: ~ }
  columns:
    name:               { type: string(225), notnull: true }
    description:        { type: string(500), notnull: true }
    status_id:          { type: integer }
  relations:
    MpStatus:   { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: Types }
    
MpDataSource:
  actAs:    { }
  columns:
    name:               { type: string(225), notnull: true }
    description:        { type: string(500), notnull: true }
    status_id:          { type: integer }
  relations:
    MpStatus:   { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: DataSources }
    
MpPeriod:
  actAs:    {  }
  columns:
    name:               { type: string(225), notnull: true }
    description:        { type: string(500), notnull: true }
    status_id:          { type: integer }
  relations:
    MpStatus:   { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: Periods }
    
MpUnit:
  actAs:    {  }
  columns:
    name:               { type: string(225), notnull: true }
    description:        { type: string(500), notnull: true }
    status_id:          { type: integer }
  relations:
    MpStatus:   { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: Units }
    
MpCountry:
  actAs:    {  }
  columns:
    name:               { type: string(225), notnull: true }
    description:        { type: string(500) }
    abbreviation:       { type: string(2), unique: true }
    code:               { type: string(3), unique: true }
    status_id:          { type: integer }
  relations:
    MpStatus:   { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: Countries }
MpGdp:
  actAs:    { }
  columns:
    name:             { type: string(225), notnull: true }
    description:      { type: string(500) }
    dari_description: { type: string(500) }
    hs_code:          { type: string(8), unique: true }
    level:            { type: integer }
# check if necessary parent for this
    parent_id:        { type: integer }
    status_id:        { type: integer }
  relations:
#    MpGdp:    { local: status_id, foreign: id, foreignAlias: Gdps }
    MpStatus:       { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: Gdps } 
    MpGdp:          { onDelete: CASCADE, local: parent_id, foreign: id, foreignAlias: Gdps }
MpGdpRecord:
  actAs:                {  }
  columns:
    gdp_id:              { type: integer }
    unit_id:            { type: integer }  
    year:               { type: integer }
    month:              { type: integer }
    value:              { type: double, notnull: true }
    creation_date:      { type: timestamp }
# created by:
    user_id:            { type: integer } 
    modification_date:  { type: timestamp }
    comments:           { type: string(500) }
    status_id:          {type: integer }
  relations:
    MpStatus:       { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: GdpRecords }
    MpUnit:         { local: unit_id, foreign: id, foreignAlias: GdpRecords }
    MpGdp:           { local: gdp_id, foreign: id, foreignAlias: GdpRecords }
    MpUser:         { local: user_id, foreign: id, foreignAlias: GdpRecords }

MpDocumentType:
  actAs:                 {  }
  columns:
    name:               { type: string(100), notnull: true }
    description:        { type: string(500) }
    is_public:          { type: boolean }
    status_id:          { type: integer }
  relations:
    MpStatus:   { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: DocumentTypes }
    
MpDocument:
  actAs:                 {  }
  columns:
    name:               { type: string(225), notnull: true }
    description:        { type: string(500) }
    filename:           { type: string(255) }
    document_type_id:   { type: integer }
    status_id:          { type: integer }
  relations:
    MpStatus:       { local: status_id, foreign: id, foreignAlias: Documents }
    MpDocumentType: { local: document_type_id, foreign: id, foreignAlias: Documents }

# define document upload record
MpDocumentRecord:
  actAs:                {  }
  columns:
    document_id:        { type: integer }
    data_source_id:     { type: integer }
# created by:
    user_id:            { type: integer } 
    department_id:      { type: integer } 
    creation_date:      { type: timestamp }
    modification_date:  { type: timestamp }
    comments:           { type: string(500) }
    status_id:          { type: integer }
  relations:
    MpStatus:       { onDelete: CASCADE, local: status_id, foreign: id, foreignAlias: DocumentRecords }
    MpDataSource:   { onDelete: CASCADE, local: data_source_id, foreign: id, foreignAlias: DocumentRecords }
    MpDocument:     { onDelete: cascade, local: document_id, foreign: id, foreignAlias: DocumentRecords }
    MpDepartment:   { onDelete: CASCADE, local: department_id, foreign: id, foreignAlias: DocumentRecords }
    MpUser:         { local: user_id, foreign: id, foreignAlias: DocumentRecords }
        
MpUserComment:
  actAs:      {}
  columns:
    name:           { type: string(100) }
    comment:        { type: string(500), notnull: true }
    user_id:        { type: integer }
    creation_date:  { type: timestamp }
  relations:
    MpUser:       { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: Comments }

# Temporary: not part of the model
MpSystemParameter:
  actAs:    {}
  columns:
    key1:    { type: string(50) }
    value1:  { type: string(225) }

# Record of bulk upload: this is only for GUI use and not part of the model
MpBulkUploadRecord:
  actAs:      {}
  columns:
    filename:           { type: string(100), notnull: true }
    description:        { type: string(500) }
    type_id:            { type: integer }
    data_source_id:     { type: integer, notnull: true }
    year:               { type: integer }
    period_id:          { type: integer }
    user_id:            { type: integer }
    creation_date:      { type: timestamp }
  relations:
    MpUser:         { local: user_id, foreign: id, foreignAlias: BulkUploads }
    MpDataSource:   { local: data_source_id, foreign: id, foreignAlias: BulkUploads }
    MpPeriod:       { local: period_id, foreign: id, foreignAlias: BulkUploads }
    MpType:         { local: type_id, foreign: id, foreignAlias: BulkUploads }
    
# Session is used by the users
MpSession:
  actAs:      {}
  columns:
    user_id:        { type: integer, notnull: true }
    start_time:     { type: timestamp, notnull: true }
    end_time:       { type: timestamp, notnull: true }
  relations:
    MpUser:       { local: user_id, foreign: id, foreignAlias: Sessions }