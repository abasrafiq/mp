<?php

/**
 * BaseMpDocumentRecord
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $document_id
 * @property integer $data_source_id
 * @property integer $user_id
 * @property integer $department_id
 * @property timestamp $creation_date
 * @property timestamp $modification_date
 * @property string $comments
 * @property integer $status_id
 * @property MpStatus $MpStatus
 * @property MpDataSource $MpDataSource
 * @property MpDocument $MpDocument
 * @property MpDepartment $MpDepartment
 * @property MpUser $MpUser
 * 
 * @method integer          getDocumentId()        Returns the current record's "document_id" value
 * @method integer          getDataSourceId()      Returns the current record's "data_source_id" value
 * @method integer          getUserId()            Returns the current record's "user_id" value
 * @method integer          getDepartmentId()      Returns the current record's "department_id" value
 * @method timestamp        getCreationDate()      Returns the current record's "creation_date" value
 * @method timestamp        getModificationDate()  Returns the current record's "modification_date" value
 * @method string           getComments()          Returns the current record's "comments" value
 * @method integer          getStatusId()          Returns the current record's "status_id" value
 * @method MpStatus         getMpStatus()          Returns the current record's "MpStatus" value
 * @method MpDataSource     getMpDataSource()      Returns the current record's "MpDataSource" value
 * @method MpDocument       getMpDocument()        Returns the current record's "MpDocument" value
 * @method MpDepartment     getMpDepartment()      Returns the current record's "MpDepartment" value
 * @method MpUser           getMpUser()            Returns the current record's "MpUser" value
 * @method MpDocumentRecord setDocumentId()        Sets the current record's "document_id" value
 * @method MpDocumentRecord setDataSourceId()      Sets the current record's "data_source_id" value
 * @method MpDocumentRecord setUserId()            Sets the current record's "user_id" value
 * @method MpDocumentRecord setDepartmentId()      Sets the current record's "department_id" value
 * @method MpDocumentRecord setCreationDate()      Sets the current record's "creation_date" value
 * @method MpDocumentRecord setModificationDate()  Sets the current record's "modification_date" value
 * @method MpDocumentRecord setComments()          Sets the current record's "comments" value
 * @method MpDocumentRecord setStatusId()          Sets the current record's "status_id" value
 * @method MpDocumentRecord setMpStatus()          Sets the current record's "MpStatus" value
 * @method MpDocumentRecord setMpDataSource()      Sets the current record's "MpDataSource" value
 * @method MpDocumentRecord setMpDocument()        Sets the current record's "MpDocument" value
 * @method MpDocumentRecord setMpDepartment()      Sets the current record's "MpDepartment" value
 * @method MpDocumentRecord setMpUser()            Sets the current record's "MpUser" value
 * 
 * @package    MP
 * @subpackage model
 * @author     abas rafiq
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMpDocumentRecord extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mp_document_record');
        $this->hasColumn('document_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('data_source_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('department_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('creation_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('modification_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('comments', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('status_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MpStatus', array(
             'local' => 'status_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MpDataSource', array(
             'local' => 'data_source_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MpDocument', array(
             'local' => 'document_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('MpDepartment', array(
             'local' => 'department_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MpUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}