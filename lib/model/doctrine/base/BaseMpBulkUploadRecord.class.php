<?php

/**
 * BaseMpBulkUploadRecord
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $filename
 * @property string $description
 * @property integer $type_id
 * @property integer $data_source_id
 * @property integer $year
 * @property integer $period_id
 * @property integer $user_id
 * @property timestamp $creation_date
 * @property MpUser $MpUser
 * @property MpDataSource $MpDataSource
 * @property MpPeriod $MpPeriod
 * @property MpType $MpType
 * 
 * @method string             getFilename()       Returns the current record's "filename" value
 * @method string             getDescription()    Returns the current record's "description" value
 * @method integer            getTypeId()         Returns the current record's "type_id" value
 * @method integer            getDataSourceId()   Returns the current record's "data_source_id" value
 * @method integer            getYear()           Returns the current record's "year" value
 * @method integer            getPeriodId()       Returns the current record's "period_id" value
 * @method integer            getUserId()         Returns the current record's "user_id" value
 * @method timestamp          getCreationDate()   Returns the current record's "creation_date" value
 * @method MpUser             getMpUser()         Returns the current record's "MpUser" value
 * @method MpDataSource       getMpDataSource()   Returns the current record's "MpDataSource" value
 * @method MpPeriod           getMpPeriod()       Returns the current record's "MpPeriod" value
 * @method MpType             getMpType()         Returns the current record's "MpType" value
 * @method MpBulkUploadRecord setFilename()       Sets the current record's "filename" value
 * @method MpBulkUploadRecord setDescription()    Sets the current record's "description" value
 * @method MpBulkUploadRecord setTypeId()         Sets the current record's "type_id" value
 * @method MpBulkUploadRecord setDataSourceId()   Sets the current record's "data_source_id" value
 * @method MpBulkUploadRecord setYear()           Sets the current record's "year" value
 * @method MpBulkUploadRecord setPeriodId()       Sets the current record's "period_id" value
 * @method MpBulkUploadRecord setUserId()         Sets the current record's "user_id" value
 * @method MpBulkUploadRecord setCreationDate()   Sets the current record's "creation_date" value
 * @method MpBulkUploadRecord setMpUser()         Sets the current record's "MpUser" value
 * @method MpBulkUploadRecord setMpDataSource()   Sets the current record's "MpDataSource" value
 * @method MpBulkUploadRecord setMpPeriod()       Sets the current record's "MpPeriod" value
 * @method MpBulkUploadRecord setMpType()         Sets the current record's "MpType" value
 * 
 * @package    MP
 * @subpackage model
 * @author     abas rafiq
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMpBulkUploadRecord extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mp_bulk_upload_record');
        $this->hasColumn('filename', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('data_source_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('year', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('period_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('creation_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MpUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('MpDataSource', array(
             'local' => 'data_source_id',
             'foreign' => 'id'));

        $this->hasOne('MpPeriod', array(
             'local' => 'period_id',
             'foreign' => 'id'));

        $this->hasOne('MpType', array(
             'local' => 'type_id',
             'foreign' => 'id'));
    }
}